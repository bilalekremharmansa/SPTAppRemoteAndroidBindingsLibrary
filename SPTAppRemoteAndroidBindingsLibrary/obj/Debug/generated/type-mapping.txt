com/spotify/android/appremote/api/ConnectApi = Com.Spotify.Android.Appremote.Api.IConnectApi
  connectSwitchToLocalDevice()Lcom/spotify/protocol/client/CallResult; = ConnectSwitchToLocalDevice()
com/spotify/android/appremote/api/ConnectionParams = Com.Spotify.Android.Appremote.Api.ConnectionParams
  getClientId()Ljava/lang/String; = ClientId
  getImageSize()I = ImageSize
  getJsonMapper()Lcom/spotify/protocol/mappers/JsonMapper; = JsonMapper
  getRedirectUri()Ljava/lang/String; = RedirectUri
  getRequiredFeatures()Ljava/util/List; = RequiredFeatures
  getShowAuthView()Z = ShowAuthView
  getThumbnailImageSize()I = ThumbnailImageSize
  getAuthMethod()Lcom/spotify/android/appremote/api/ConnectionParams$AuthMethod; = GetAuthMethod()
com/spotify/android/appremote/api/Connector = Com.Spotify.Android.Appremote.Api.IConnector
  connect(Landroid/content/Context;Lcom/spotify/android/appremote/api/ConnectionParams;Lcom/spotify/android/appremote/api/Connector$ConnectionListener;)V = Connect(Android.Content.Context, Com.Spotify.Android.Appremote.Api.ConnectionParams, Com.Spotify.Android.Appremote.Api.IConnectorConnectionListener)
  disconnect(Lcom/spotify/android/appremote/api/SpotifyAppRemote;)V = Disconnect(Com.Spotify.Android.Appremote.Api.SpotifyAppRemote)
com/spotify/android/appremote/api/ContentApi = Com.Spotify.Android.Appremote.Api.IContentApi
  getChildrenOfItem(Lcom/spotify/protocol/types/ListItem;II)Lcom/spotify/protocol/client/CallResult; = GetChildrenOfItem(Com.Spotify.Protocol.Types.ListItem, int, int)
  getRecommendedContentItems(Lcom/spotify/android/appremote/api/ContentApi$ContentType;)Lcom/spotify/protocol/client/CallResult; = GetRecommendedContentItems(Com.Spotify.Android.Appremote.Api.ContentApiContentType)
  playContentItem(Lcom/spotify/protocol/types/ListItem;)Lcom/spotify/protocol/client/CallResult; = PlayContentItem(Com.Spotify.Protocol.Types.ListItem)
com/spotify/android/appremote/api/error/AuthenticationFailedException = Com.Spotify.Android.Appremote.Api.Error.AuthenticationFailedException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/spotify/android/appremote/api/error/CouldNotFindSpotifyApp = Com.Spotify.Android.Appremote.Api.Error.CouldNotFindSpotifyApp
  <init>()V = .ctor()
com/spotify/android/appremote/api/error/LoggedOutException = Com.Spotify.Android.Appremote.Api.Error.LoggedOutException
  <init>()V = .ctor()
com/spotify/android/appremote/api/error/NotLoggedInException = Com.Spotify.Android.Appremote.Api.Error.NotLoggedInException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/spotify/android/appremote/api/error/OfflineModeException = Com.Spotify.Android.Appremote.Api.Error.OfflineModeException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/spotify/android/appremote/api/error/SpotifyConnectionTerminatedException = Com.Spotify.Android.Appremote.Api.Error.SpotifyConnectionTerminatedException
  <init>()V = .ctor()
com/spotify/android/appremote/api/error/SpotifyDisconnectedException = Com.Spotify.Android.Appremote.Api.Error.SpotifyDisconnectedException
  <init>()V = .ctor()
com/spotify/android/appremote/api/error/UnsupportedFeatureVersionException = Com.Spotify.Android.Appremote.Api.Error.UnsupportedFeatureVersionException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/spotify/android/appremote/api/error/UserNotAuthorizedException = Com.Spotify.Android.Appremote.Api.Error.UserNotAuthorizedException
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
com/spotify/android/appremote/api/ImagesApi = Com.Spotify.Android.Appremote.Api.IImagesApi
  getImage(Lcom/spotify/protocol/types/ImageUri;)Lcom/spotify/protocol/client/CallResult; = GetImage(Com.Spotify.Protocol.Types.ImageUri)
com/spotify/android/appremote/api/MotionStateApi = Com.Spotify.Android.Appremote.Api.IMotionStateApi
  subscribeToMotionState()Lcom/spotify/protocol/client/Subscription; = SubscribeToMotionState()
com/spotify/android/appremote/api/PlayerApi = Com.Spotify.Android.Appremote.Api.IPlayerApi
  getPlayerState()Lcom/spotify/protocol/client/CallResult; = PlayerState
  pause()Lcom/spotify/protocol/client/CallResult; = Pause()
  play(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = Play(string)
  play(Ljava/lang/String;Lcom/spotify/android/appremote/api/PlayerApi$StreamType;)Lcom/spotify/protocol/client/CallResult; = Play(string, Com.Spotify.Android.Appremote.Api.PlayerApiStreamType)
  queue(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = Queue(string)
  resume()Lcom/spotify/protocol/client/CallResult; = Resume()
  seekTo(J)Lcom/spotify/protocol/client/CallResult; = SeekTo(long)
  setRepeat(I)Lcom/spotify/protocol/client/CallResult; = SetRepeat(int)
  setShuffle(Z)Lcom/spotify/protocol/client/CallResult; = SetShuffle(bool)
  skipNext()Lcom/spotify/protocol/client/CallResult; = SkipNext()
  skipPrevious()Lcom/spotify/protocol/client/CallResult; = SkipPrevious()
  subscribeToPlayerContext()Lcom/spotify/protocol/client/Subscription; = SubscribeToPlayerContext()
  subscribeToPlayerState()Lcom/spotify/protocol/client/Subscription; = SubscribeToPlayerState()
  toggleRepeat()Lcom/spotify/protocol/client/CallResult; = ToggleRepeat()
  toggleShuffle()Lcom/spotify/protocol/client/CallResult; = ToggleShuffle()
com/spotify/android/appremote/api/SpotifyAppRemote = Com.Spotify.Android.Appremote.Api.SpotifyAppRemote
  getConnectApi()Lcom/spotify/android/appremote/api/ConnectApi; = ConnectApi
  getContentApi()Lcom/spotify/android/appremote/api/ContentApi; = ContentApi
  isDebugMode()Z = DebugMode
  setDebugMode(Z)V = DebugMode
  getImagesApi()Lcom/spotify/android/appremote/api/ImagesApi; = ImagesApi
  isConnected()Z = IsConnected
  getMotionStateApi()Lcom/spotify/android/appremote/api/MotionStateApi; = MotionStateApi
  getPlayerApi()Lcom/spotify/android/appremote/api/PlayerApi; = PlayerApi
  getUserApi()Lcom/spotify/android/appremote/api/UserApi; = UserApi
  call(Ljava/lang/String;Lcom/spotify/protocol/types/Item;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Object, Java.Lang.Class)
  connect(Landroid/content/Context;Lcom/spotify/android/appremote/api/ConnectionParams;Lcom/spotify/android/appremote/api/Connector$ConnectionListener;)V = Connect(Android.Content.Context, Com.Spotify.Android.Appremote.Api.ConnectionParams, Com.Spotify.Android.Appremote.Api.IConnectorConnectionListener)
  disconnect(Lcom/spotify/android/appremote/api/SpotifyAppRemote;)V = Disconnect(Com.Spotify.Android.Appremote.Api.SpotifyAppRemote)
  isSpotifyInstalled(Landroid/content/Context;)Z = IsSpotifyInstalled(Android.Content.Context)
  subscribe(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/Subscription; = Subscribe(string, Java.Lang.Class)
com/spotify/android/appremote/api/UserApi = Com.Spotify.Android.Appremote.Api.IUserApi
  getCapabilities()Lcom/spotify/protocol/client/CallResult; = Capabilities
  addToLibrary(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = AddToLibrary(string)
  getLibraryState(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = GetLibraryState(string)
  removeFromLibrary(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = RemoveFromLibrary(string)
  subscribeToCapabilities()Lcom/spotify/protocol/client/Subscription; = SubscribeToCapabilities()
  subscribeToUserStatus()Lcom/spotify/protocol/client/Subscription; = SubscribeToUserStatus()
com/spotify/android/appremote/BuildConfig = Com.Spotify.Android.Appremote.BuildConfig
  <init>()V = .ctor()
  APPLICATION_ID = ApplicationId
  BUILD_TYPE = BuildType
  DEBUG = Debug
  FLAVOR = Flavor
  VERSION_CODE = VersionCode
  VERSION_NAME = VersionName
com/spotify/android/appremote/internal/AppRemoteDebugImpl = Com.Spotify.Android.Appremote.Internal.AppRemoteDebugImpl
  <init>()V = .ctor()
  assertTrue(ZLjava/lang/String;)V = AssertTrue(bool, string)
  d(Ljava/lang/String;[Ljava/lang/Object;)V = D(string, params Java.Lang.Object[])
  d(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = D(Java.Lang.Throwable, string, params Java.Lang.Object[])
  e(Ljava/lang/String;[Ljava/lang/Object;)V = E(string, params Java.Lang.Object[])
  e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = E(Java.Lang.Throwable, string, params Java.Lang.Object[])
com/spotify/android/appremote/internal/ConnectApiImpl = Com.Spotify.Android.Appremote.Internal.ConnectApiImpl
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  connectSwitchToLocalDevice()Lcom/spotify/protocol/client/CallResult; = ConnectSwitchToLocalDevice()
com/spotify/android/appremote/internal/ContentApiImpl = Com.Spotify.Android.Appremote.Internal.ContentApiImpl
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  getChildrenOfItem(Lcom/spotify/protocol/types/ListItem;II)Lcom/spotify/protocol/client/CallResult; = GetChildrenOfItem(Com.Spotify.Protocol.Types.ListItem, int, int)
  getRecommendedContentItems(Lcom/spotify/android/appremote/api/ContentApi$ContentType;)Lcom/spotify/protocol/client/CallResult; = GetRecommendedContentItems(Com.Spotify.Android.Appremote.Api.ContentApiContentType)
  playContentItem(Lcom/spotify/protocol/types/ListItem;)Lcom/spotify/protocol/client/CallResult; = PlayContentItem(Com.Spotify.Protocol.Types.ListItem)
com/spotify/android/appremote/internal/ImagesApiImpl = Com.Spotify.Android.Appremote.Internal.ImagesApiImpl
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  getImage(Lcom/spotify/protocol/types/ImageUri;)Lcom/spotify/protocol/client/CallResult; = GetImage(Com.Spotify.Protocol.Types.ImageUri)
com/spotify/android/appremote/internal/MotionStateApiImpl = Com.Spotify.Android.Appremote.Internal.MotionStateApiImpl
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  subscribeToMotionState()Lcom/spotify/protocol/client/Subscription; = SubscribeToMotionState()
com/spotify/android/appremote/internal/PendingServiceConnectionResult = Com.Spotify.Android.Appremote.Internal.PendingServiceConnectionResult
  <init>()V = .ctor()
com/spotify/android/appremote/internal/PlayerApiImpl = Com.Spotify.Android.Appremote.Internal.PlayerApiImpl
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  getPlayerState()Lcom/spotify/protocol/client/CallResult; = PlayerState
  pause()Lcom/spotify/protocol/client/CallResult; = Pause()
  play(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = Play(string)
  play(Ljava/lang/String;Lcom/spotify/android/appremote/api/PlayerApi$StreamType;)Lcom/spotify/protocol/client/CallResult; = Play(string, Com.Spotify.Android.Appremote.Api.PlayerApiStreamType)
  queue(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = Queue(string)
  resume()Lcom/spotify/protocol/client/CallResult; = Resume()
  seekTo(J)Lcom/spotify/protocol/client/CallResult; = SeekTo(long)
  setRepeat(I)Lcom/spotify/protocol/client/CallResult; = SetRepeat(int)
  setShuffle(Z)Lcom/spotify/protocol/client/CallResult; = SetShuffle(bool)
  skipNext()Lcom/spotify/protocol/client/CallResult; = SkipNext()
  skipPrevious()Lcom/spotify/protocol/client/CallResult; = SkipPrevious()
  subscribeToPlayerContext()Lcom/spotify/protocol/client/Subscription; = SubscribeToPlayerContext()
  subscribeToPlayerState()Lcom/spotify/protocol/client/Subscription; = SubscribeToPlayerState()
  toggleRepeat()Lcom/spotify/protocol/client/CallResult; = ToggleRepeat()
  toggleShuffle()Lcom/spotify/protocol/client/CallResult; = ToggleShuffle()
com/spotify/android/appremote/internal/RemoteServiceIo = Com.Spotify.Android.Appremote.Internal.RemoteServiceIo
  <init>(Ljava/lang/String;Landroid/content/Context;)V = .ctor(string, Android.Content.Context)
  isConnected()Z = IsConnected
  isConnecting()Z = IsConnecting
  connect()Lcom/spotify/protocol/client/PendingResult; = Connect()
  disconnect()V = Disconnect()
  onServiceConnected(Landroid/content/ComponentName;Landroid/os/IBinder;)V = OnServiceConnected(Android.Content.ComponentName, Android.OS.IBinder)
  onServiceDisconnected(Landroid/content/ComponentName;)V = OnServiceDisconnected(Android.Content.ComponentName)
  setDataInput(Lcom/spotify/protocol/client/AppProtocolIo$DataInput;)V = SetDataInput(Com.Spotify.Protocol.Client.IAppProtocolIoDataInput)
  setOnConnectionTerminatedListener(Lcom/spotify/protocol/client/OnConnectionTerminatedListener;)V = SetOnConnectionTerminatedListener(Com.Spotify.Protocol.Client.IOnConnectionTerminatedListener)
  writeData([BI)V = WriteData(byte[], int)
com/spotify/android/appremote/internal/SdkRemoteClientConnector = Com.Spotify.Android.Appremote.Internal.SdkRemoteClientConnector
  APP_ID_AUTH = AppIdAuth
  CATEGORY = Category
  EXTRA_REDIRECT_URI = ExtraRedirectUri
  EXTRA_SCOPES = ExtraScopes
  EXTRA_SHOW_AUTH_VIEW = ExtraShowAuthView
  REMOTE_CONTROL_SCOPE = RemoteControlScope
  connect(Lcom/spotify/protocol/client/RemoteClientConnector$ConnectionCallback;)V = Connect(Com.Spotify.Protocol.Client.IRemoteClientConnectorConnectionCallback)
  create(Landroid/content/Context;Lcom/spotify/android/appremote/api/ConnectionParams;Ljava/lang/String;)Lcom/spotify/android/appremote/internal/SdkRemoteClientConnector; = Create(Android.Content.Context, Com.Spotify.Android.Appremote.Api.ConnectionParams, string)
  disconnect()V = Disconnect()
  getDefaultImageSizeForCurrentDisplay(Landroid/util/DisplayMetrics;)I = GetDefaultImageSizeForCurrentDisplay(Android.Util.DisplayMetrics)
  setConnectionTerminatedListener(Lcom/spotify/protocol/client/OnConnectionTerminatedListener;)V = SetConnectionTerminatedListener(Com.Spotify.Protocol.Client.IOnConnectionTerminatedListener)
com/spotify/android/appremote/internal/SdkRemoteClientConnectorFactory = Com.Spotify.Android.Appremote.Internal.SdkRemoteClientConnectorFactory
  <init>()V = .ctor()
  newConnector(Landroid/content/Context;Lcom/spotify/android/appremote/api/ConnectionParams;Ljava/lang/String;)Lcom/spotify/android/appremote/internal/SdkRemoteClientConnector; = NewConnector(Android.Content.Context, Com.Spotify.Android.Appremote.Api.ConnectionParams, string)
com/spotify/android/appremote/internal/SpotifyAppRemoteIsConnectedRule = Com.Spotify.Android.Appremote.Internal.SpotifyAppRemoteIsConnectedRule
  <init>(Lcom/spotify/android/appremote/api/SpotifyAppRemote;)V = .ctor(Com.Spotify.Android.Appremote.Api.SpotifyAppRemote)
  getError()Ljava/lang/Throwable; = Error
  isSatisfied()Z = IsSatisfied
com/spotify/android/appremote/internal/SpotifyLocator = Com.Spotify.Android.Appremote.Internal.SpotifyLocator
  <init>()V = .ctor()
  getSpotifyBestPackageName(Landroid/content/Context;)Ljava/lang/String; = GetSpotifyBestPackageName(Android.Content.Context)
  isSpotifyInstalled(Landroid/content/Context;)Z = IsSpotifyInstalled(Android.Content.Context)
com/spotify/android/appremote/internal/StrictRemoteClient = Com.Spotify.Android.Appremote.Internal.StrictRemoteClient
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  addRule(Lcom/spotify/android/appremote/internal/StrictRemoteClient$Rule;)V = AddRule(Com.Spotify.Android.Appremote.Internal.StrictRemoteClient.IRule)
  call(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Class)
  call(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Object, Java.Lang.Class)
  goodbye()V = Goodbye()
  hello(Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Hello(Java.Lang.Class)
  subscribe(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/Subscription; = Subscribe(string, Java.Lang.Class)
  unsubscribe(Lcom/spotify/protocol/client/Subscription;)V = Unsubscribe(Com.Spotify.Protocol.Client.Subscription)
com/spotify/android/appremote/internal/UserApiImpl = Com.Spotify.Android.Appremote.Internal.UserApiImpl
  <init>(Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Client.IRemoteClient)
  getCapabilities()Lcom/spotify/protocol/client/CallResult; = Capabilities
  addToLibrary(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = AddToLibrary(string)
  getLibraryState(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = GetLibraryState(string)
  removeFromLibrary(Ljava/lang/String;)Lcom/spotify/protocol/client/CallResult; = RemoveFromLibrary(string)
  subscribeToCapabilities()Lcom/spotify/protocol/client/Subscription; = SubscribeToCapabilities()
  subscribeToUserStatus()Lcom/spotify/protocol/client/Subscription; = SubscribeToUserStatus()
com/spotify/android/appremote/internal/Validate = Com.Spotify.Android.Appremote.Internal.Validate
  checkNotNull(Ljava/lang/Object;)Ljava/lang/Object; = CheckNotNull(Java.Lang.Object)
com/spotify/protocol/AppProtocol = Com.Spotify.Protocol.AppProtocol
  EMPTY = Empty
com/spotify/protocol/client/AppProtocolCommunicator = Com.Spotify.Protocol.Client.AppProtocolCommunicator
  <init>(Lcom/spotify/protocol/client/ConnectionDetails;Lcom/spotify/protocol/mappers/JsonMapper;Lcom/spotify/protocol/client/AppProtocolIo;)V = .ctor(Com.Spotify.Protocol.Client.ConnectionDetails, Com.Spotify.Protocol.Mappers.IJsonMapper, Com.Spotify.Protocol.Client.IAppProtocolIo)
  onData([BI)V = OnData(byte[], int)
  sendCall(ILjava/lang/Object;Ljava/lang/String;)V = SendCall(int, Java.Lang.Object, string)
  sendCall(ILjava/lang/Object;Ljava/lang/String;Ljava/util/List;)V = SendCall(int, Java.Lang.Object, string, System.Collections.Generic.IList<Java.Lang.Object>)
  sendCall(ILjava/lang/Object;Ljava/lang/String;Ljava/util/List;Ljava/lang/Object;)V = SendCall(int, Java.Lang.Object, string, System.Collections.Generic.IList<Java.Lang.Object>, Java.Lang.Object)
  sendCancel(ILjava/lang/Object;)V = SendCancel(int, Java.Lang.Object)
  sendGoodbye()V = SendGoodbye()
  sendHello()V = SendHello()
  sendSubscribe(ILjava/lang/Object;Ljava/lang/String;)V = SendSubscribe(int, Java.Lang.Object, string)
  sendUnsubscribe(II)V = SendUnsubscribe(int, int)
  setMessageReceiver(Lcom/spotify/protocol/WampClient$Receiver;)V = SetMessageReceiver(Com.Spotify.Protocol.IWampClientReceiver)
com/spotify/protocol/client/AppProtocolIo = Com.Spotify.Protocol.Client.IAppProtocolIo
  isConnected()Z = IsConnected
  isConnecting()Z = IsConnecting
  connect()Lcom/spotify/protocol/client/PendingResult; = Connect()
  disconnect()V = Disconnect()
  setDataInput(Lcom/spotify/protocol/client/AppProtocolIo$DataInput;)V = SetDataInput(Com.Spotify.Protocol.Client.IAppProtocolIoDataInput)
  writeData([BI)V = WriteData(byte[], int)
com/spotify/protocol/client/CallResult = Com.Spotify.Protocol.Client.CallResult
  <init>(Lcom/spotify/protocol/types/Types$RequestId;)V = .ctor(Com.Spotify.Protocol.Types.TypesRequestId)
  getRequestId()Lcom/spotify/protocol/types/Types$RequestId; = RequestId
  onResultDelivered()V = OnResultDelivered()
  setResultCallback(Lcom/spotify/protocol/client/CallResult$ResultCallback;)Lcom/spotify/protocol/client/CallResult; = SetResultCallback(Com.Spotify.Protocol.Client.CallResult.IResultCallback)
com/spotify/protocol/client/Coding = Com.Spotify.Protocol.Client.Coding
  checkNotNull(Ljava/lang/Object;)Ljava/lang/Object; = CheckNotNull(Java.Lang.Object)
com/spotify/protocol/client/ConnectionDetails = Com.Spotify.Protocol.Client.ConnectionDetails
  getAuthId()Ljava/lang/String; = AuthId
  getCategory()Ljava/lang/String; = Category
  getExtras()Ljava/util/Map; = Extras
  getId()Ljava/lang/String; = Id
  getImageHeight()I = ImageHeight
  getImageWidth()I = ImageWidth
  getModel()Ljava/lang/String; = Model
  getName()Ljava/lang/String; = Name
  getRequiredFeatures()Ljava/util/List; = RequiredFeatures
  getThumbnailImageHeight()I = ThumbnailImageHeight
  getThumbnailImageWidth()I = ThumbnailImageWidth
  getVersion()Ljava/lang/String; = Version
  getAuthMethods()[Ljava/lang/String; = GetAuthMethods()
com/spotify/protocol/client/Debug = Com.Spotify.Protocol.Client.Debug
  assertTrue(ZLjava/lang/String;)V = AssertTrue(bool, string)
  d(Ljava/lang/String;[Ljava/lang/Object;)V = D(string, params Java.Lang.Object[])
  d(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = D(Java.Lang.Throwable, string, params Java.Lang.Object[])
  e(Ljava/lang/String;[Ljava/lang/Object;)V = E(string, params Java.Lang.Object[])
  e(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V = E(Java.Lang.Throwable, string, params Java.Lang.Object[])
  setAssertion(Lcom/spotify/protocol/client/Debug$Assertion;)V = SetAssertion(Com.Spotify.Protocol.Client.Debug.IAssertion)
  setLogger(Lcom/spotify/protocol/client/Debug$Logger;)V = SetLogger(Com.Spotify.Protocol.Client.Debug.ILogger)
com/spotify/protocol/client/error/RemoteClientException = Com.Spotify.Protocol.Client.Error.RemoteClientException
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  getReasonUri()Ljava/lang/String; = ReasonUri
com/spotify/protocol/client/ErrorCallback = Com.Spotify.Protocol.Client.IErrorCallback
  onError(Ljava/lang/Throwable;)V = OnError(Java.Lang.Throwable)
com/spotify/protocol/client/OnConnectionTerminatedListener = Com.Spotify.Protocol.Client.IOnConnectionTerminatedListener
  onConnectionTerminated()V = OnConnectionTerminated()
com/spotify/protocol/client/PendingResult = Com.Spotify.Protocol.Client.IPendingResult
  isCanceled()Z = IsCanceled
  await()Lcom/spotify/protocol/client/Result; = Await()
  await(JLjava/util/concurrent/TimeUnit;)Lcom/spotify/protocol/client/Result; = Await(long, Java.Util.Concurrent.TimeUnit)
  cancel()V = Cancel()
  setErrorCallback(Lcom/spotify/protocol/client/ErrorCallback;)Lcom/spotify/protocol/client/PendingResult; = SetErrorCallback(Com.Spotify.Protocol.Client.IErrorCallback)
com/spotify/protocol/client/PendingResultBase = Com.Spotify.Protocol.Client.PendingResultBase
  <init>()V = .ctor()
  mErrorCallback = MErrorCallback
  mIsCanceled = MIsCanceled
  mRecentResult = MRecentResult
  isCanceled()Z = IsCanceled
  await()Lcom/spotify/protocol/client/Result; = Await()
  await(JLjava/util/concurrent/TimeUnit;)Lcom/spotify/protocol/client/Result; = Await(long, Java.Util.Concurrent.TimeUnit)
  cancel()V = Cancel()
  deliverError(Ljava/lang/Throwable;)V = DeliverError(Java.Lang.Throwable)
  deliverResult(Lcom/spotify/protocol/client/Result;)V = DeliverResult(Com.Spotify.Protocol.Client.IResult)
  onResultDelivered()V = OnResultDelivered()
  setErrorCallback(Lcom/spotify/protocol/client/ErrorCallback;)Lcom/spotify/protocol/client/PendingResult; = SetErrorCallback(Com.Spotify.Protocol.Client.IErrorCallback)
com/spotify/protocol/client/RemoteClient = Com.Spotify.Protocol.Client.IRemoteClient
  call(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Class)
  call(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Object, Java.Lang.Class)
  goodbye()V = Goodbye()
  hello(Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Hello(Java.Lang.Class)
  subscribe(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/Subscription; = Subscribe(string, Java.Lang.Class)
  unsubscribe(Lcom/spotify/protocol/client/Subscription;)V = Unsubscribe(Com.Spotify.Protocol.Client.Subscription)
com/spotify/protocol/client/RemoteClientConnector = Com.Spotify.Protocol.Client.IRemoteClientConnector
  connect(Lcom/spotify/protocol/client/RemoteClientConnector$ConnectionCallback;)V = Connect(Com.Spotify.Protocol.Client.IRemoteClientConnectorConnectionCallback)
  disconnect()V = Disconnect()
com/spotify/protocol/client/RemoteWampClient = Com.Spotify.Protocol.Client.RemoteWampClient
  <init>(Lcom/spotify/protocol/client/AppProtocolCommunicator;Lcom/spotify/protocol/client/WampCallsOrchestrator;)V = .ctor(Com.Spotify.Protocol.Client.AppProtocolCommunicator, Com.Spotify.Protocol.Client.WampCallsOrchestrator)
  call(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Class)
  call(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Call(string, Java.Lang.Object, Java.Lang.Class)
  goodbye()V = Goodbye()
  hello(Ljava/lang/Class;)Lcom/spotify/protocol/client/CallResult; = Hello(Java.Lang.Class)
  setOnConnectionTerminatedListener(Lcom/spotify/protocol/client/OnConnectionTerminatedListener;)V = SetOnConnectionTerminatedListener(Com.Spotify.Protocol.Client.IOnConnectionTerminatedListener)
  subscribe(Ljava/lang/String;Ljava/lang/Class;)Lcom/spotify/protocol/client/Subscription; = Subscribe(string, Java.Lang.Class)
  unsubscribe(Lcom/spotify/protocol/client/Subscription;)V = Unsubscribe(Com.Spotify.Protocol.Client.Subscription)
com/spotify/protocol/client/RequiredFeatures = Com.Spotify.Protocol.Client.RequiredFeatures
  FEATURES = Features
  FEATURES_V1 = FeaturesV1
  FEATURES_V2 = FeaturesV2
  FEATURES_V3 = FeaturesV3
  NONE = None
com/spotify/protocol/client/Result = Com.Spotify.Protocol.Client.IResult
  getData()Ljava/lang/Object; = Data
  getError()Ljava/lang/Throwable; = Error
  getErrorMessage()Ljava/lang/String; = ErrorMessage
  isSuccessful()Z = IsSuccessful
com/spotify/protocol/client/ResultUtils = Com.Spotify.Protocol.Client.ResultUtils
  createErrorResult(Ljava/lang/Throwable;)Lcom/spotify/protocol/client/Result; = CreateErrorResult(Java.Lang.Throwable)
  createSuccessfulResult(Ljava/lang/Object;)Lcom/spotify/protocol/client/Result; = CreateSuccessfulResult(Java.Lang.Object)
com/spotify/protocol/client/Subscription = Com.Spotify.Protocol.Client.Subscription
  <init>(Lcom/spotify/protocol/types/Types$RequestId;Lcom/spotify/protocol/client/RemoteClient;)V = .ctor(Com.Spotify.Protocol.Types.TypesRequestId, Com.Spotify.Protocol.Client.IRemoteClient)
  getRequestId()Lcom/spotify/protocol/types/Types$RequestId; = RequestId
  onResultDelivered()V = OnResultDelivered()
  setEventCallback(Lcom/spotify/protocol/client/Subscription$EventCallback;)Lcom/spotify/protocol/client/Subscription; = SetEventCallback(Com.Spotify.Protocol.Client.Subscription.IEventCallback)
  setLifecycleCallback(Lcom/spotify/protocol/client/Subscription$LifecycleCallback;)Lcom/spotify/protocol/client/Subscription; = SetLifecycleCallback(Com.Spotify.Protocol.Client.Subscription.ILifecycleCallback)
com/spotify/protocol/client/WampCallsOrchestrator = Com.Spotify.Protocol.Client.WampCallsOrchestrator
  <init>()V = .ctor()
com/spotify/protocol/client/WampRouterImpl = Com.Spotify.Protocol.Client.WampRouterImpl
  <init>()V = .ctor()
  addReceiver(Lcom/spotify/protocol/WampClient$Receiver;)V = AddReceiver(Com.Spotify.Protocol.IWampClientReceiver)
  removeReceiver(Lcom/spotify/protocol/WampClient$Receiver;)V = RemoveReceiver(Com.Spotify.Protocol.IWampClientReceiver)
  route(Lcom/spotify/protocol/WampMessage;)Z = Route(Com.Spotify.Protocol.WampMessage)
com/spotify/protocol/error/SpotifyAppRemoteException = Com.Spotify.Protocol.Error.SpotifyAppRemoteException
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  <init>(Ljava/lang/String;Ljava/lang/Throwable;)V = .ctor(string, Java.Lang.Throwable)
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/spotify/protocol/mappers/gson/GsonMapper = Com.Spotify.Protocol.Mappers.Gson.GsonMapper
  create()Lcom/spotify/protocol/mappers/gson/GsonMapper; = Create()
  toJson(Ljava/lang/Object;)Ljava/lang/String; = ToJson(Java.Lang.Object)
  toJsonArray(Ljava/lang/String;)Lcom/spotify/protocol/mappers/JsonArray; = ToJsonArray(string)
com/spotify/protocol/mappers/jackson/ImageUriJson = Com.Spotify.Protocol.Mappers.Jackson.ImageUriJson
  <init>()V = .ctor()
com/spotify/protocol/mappers/jackson/JacksonMapper = Com.Spotify.Protocol.Mappers.Jackson.JacksonMapper
  create()Lcom/spotify/protocol/mappers/jackson/JacksonMapper; = Create()
  toJson(Ljava/lang/Object;)Ljava/lang/String; = ToJson(Java.Lang.Object)
  toJsonArray(Ljava/lang/String;)Lcom/spotify/protocol/mappers/JsonArray; = ToJsonArray(string)
com/spotify/protocol/mappers/JsonArray = Com.Spotify.Protocol.Mappers.IJsonArray
  getIntAt(I)I = GetIntAt(int)
  getObjectAt(I)Lcom/spotify/protocol/mappers/JsonObject; = GetObjectAt(int)
  getStringAt(I)Ljava/lang/String; = GetStringAt(int)
com/spotify/protocol/mappers/JsonMapper = Com.Spotify.Protocol.Mappers.IJsonMapper
  toJson(Ljava/lang/Object;)Ljava/lang/String; = ToJson(Java.Lang.Object)
  toJsonArray(Ljava/lang/String;)Lcom/spotify/protocol/mappers/JsonArray; = ToJsonArray(string)
com/spotify/protocol/mappers/JsonMappingException = Com.Spotify.Protocol.Mappers.JsonMappingException
  <init>(Ljava/lang/Throwable;)V = .ctor(Java.Lang.Throwable)
com/spotify/protocol/mappers/JsonObject = Com.Spotify.Protocol.Mappers.IJsonObject
  getAs(Ljava/lang/Class;)Ljava/lang/Object; = GetAs(Java.Lang.Class)
  toJson()Ljava/lang/String; = ToJson()
com/spotify/protocol/types/Album = Com.Spotify.Protocol.Types.Album
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  name = Name
  uri = Uri
com/spotify/protocol/types/Artist = Com.Spotify.Protocol.Types.Artist
  <init>(Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string)
  name = Name
  uri = Uri
com/spotify/protocol/types/Capabilities = Com.Spotify.Protocol.Types.Capabilities
  <init>(Z)V = .ctor(bool)
  canPlayOnDemand = CanPlayOnDemand
com/spotify/protocol/types/ChildrenPageRequest = Com.Spotify.Protocol.Types.ChildrenPageRequest
  <init>(Ljava/lang/String;II)V = .ctor(string, int, int)
  limit = Limit
  offset = Offset
  parentId = ParentId
com/spotify/protocol/types/Empty = Com.Spotify.Protocol.Types.Empty
  <init>()V = .ctor()
com/spotify/protocol/types/GetRecommendedContentItemsRequest = Com.Spotify.Protocol.Types.GetRecommendedContentItemsRequest
  <init>()V = .ctor()
  <init>(Ljava/lang/String;)V = .ctor(string)
  type = Type
com/spotify/protocol/types/HelloDetails = Com.Spotify.Protocol.Types.HelloDetails
  <init>(Lcom/spotify/protocol/types/Roles;Lcom/spotify/protocol/types/Info;[Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V = .ctor(Com.Spotify.Protocol.Types.Roles, Com.Spotify.Protocol.Types.Info, string[], string, System.Collections.Generic.IDictionary<string, string>)
  authid = Authid
  authmethods = Authmethods
  extras = Extras
  info = Info
  roles = Roles
com/spotify/protocol/types/Identifier = Com.Spotify.Protocol.Types.Identifier
  <init>(Ljava/lang/String;)V = .ctor(string)
  id = Id
com/spotify/protocol/types/Image = Com.Spotify.Protocol.Types.Image
  <init>([BII)V = .ctor(byte[], int, int)
  height = Height
  imageData = ImageData
  width = Width
com/spotify/protocol/types/ImageUri = Com.Spotify.Protocol.Types.ImageUri
  <init>(Ljava/lang/String;)V = .ctor(string)
  raw = Raw
com/spotify/protocol/types/Info = Com.Spotify.Protocol.Types.Info
  <init>(ILjava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IIII)V = .ctor(int, System.Collections.Generic.IList<string>, string, string, string, string, string, string, int, int, int, int)
  category = Category
  defaultImageHeight = DefaultImageHeight
  defaultImageWidth = DefaultImageWidth
  defaultThumbnailImageHeight = DefaultThumbnailImageHeight
  defaultThumbnailImageWidth = DefaultThumbnailImageWidth
  id = Id
  imageType = ImageType
  model = Model
  name = Name
  protocolVersion = ProtocolVersion
  requiredFeatures = RequiredFeatures
  version = Version
com/spotify/protocol/types/Item = Com.Spotify.Protocol.Types.IItem
com/spotify/protocol/types/LibraryState = Com.Spotify.Protocol.Types.LibraryState
  <init>(Ljava/lang/String;ZZ)V = .ctor(string, bool, bool)
  canAdd = CanAdd
  isAdded = IsAdded
  uri = Uri
com/spotify/protocol/types/ListItem = Com.Spotify.Protocol.Types.ListItem
  <init>(Ljava/lang/String;Ljava/lang/String;Lcom/spotify/protocol/types/ImageUri;Ljava/lang/String;Ljava/lang/String;ZZ)V = .ctor(string, string, Com.Spotify.Protocol.Types.ImageUri, string, string, bool, bool)
  hasChildren = HasChildren
  id = Id
  imageUri = ImageUri
  playable = Playable
  subtitle = Subtitle
  title = Title
  uri = Uri
com/spotify/protocol/types/ListItems = Com.Spotify.Protocol.Types.ListItems
  <init>(III[Lcom/spotify/protocol/types/ListItem;)V = .ctor(int, int, int, Com.Spotify.Protocol.Types.ListItem[])
  items = Items
  limit = Limit
  offset = Offset
  total = Total
com/spotify/protocol/types/Message = Com.Spotify.Protocol.Types.Message
  <init>(Ljava/lang/String;)V = .ctor(string)
  message = _message
com/spotify/protocol/types/MotionState = Com.Spotify.Protocol.Types.MotionState
  <init>(I)V = .ctor(int)
  DETECTED = Detected
  DETECTING = Detecting
  ERROR = Error
  INITIAL = Initial
  SKIPPED = Skipped
  state = State
  UNKNOWN = Unknown
com/spotify/protocol/types/PlaybackPosition = Com.Spotify.Protocol.Types.PlaybackPosition
  <init>(J)V = .ctor(long)
  position = Position
com/spotify/protocol/types/PlaybackSpeed = Com.Spotify.Protocol.Types.PlaybackSpeed
  <init>()V = .ctor()
  <init>(I)V = .ctor(int)
  playbackSpeed = _playbackSpeed
com/spotify/protocol/types/PlayerContext = Com.Spotify.Protocol.Types.PlayerContext
  <init>()V = .ctor()
  <init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V = .ctor(string, string, string, string)
  subtitle = Subtitle
  title = Title
  type = Type
  uri = Uri
com/spotify/protocol/types/PlayerOptions = Com.Spotify.Protocol.Types.PlayerOptions
  <init>(ZI)V = .ctor(bool, int)
  DEFAULT = Default
  isShuffling = IsShuffling
  repeatMode = RepeatMode
com/spotify/protocol/types/PlayerRestrictions = Com.Spotify.Protocol.Types.PlayerRestrictions
  <init>(ZZZZZZ)V = .ctor(bool, bool, bool, bool, bool, bool)
  canRepeatContext = CanRepeatContext
  canRepeatTrack = CanRepeatTrack
  canSeek = CanSeek
  canSkipNext = CanSkipNext
  canSkipPrev = CanSkipPrev
  canToggleShuffle = CanToggleShuffle
  DEFAULT = Default
com/spotify/protocol/types/PlayerState = Com.Spotify.Protocol.Types.PlayerState
  <init>(Lcom/spotify/protocol/types/Track;ZFJLcom/spotify/protocol/types/PlayerOptions;Lcom/spotify/protocol/types/PlayerRestrictions;)V = .ctor(Com.Spotify.Protocol.Types.Track, bool, float, long, Com.Spotify.Protocol.Types.PlayerOptions, Com.Spotify.Protocol.Types.PlayerRestrictions)
  isPaused = IsPaused
  playbackOptions = PlaybackOptions
  playbackPosition = PlaybackPosition
  playbackRestrictions = PlaybackRestrictions
  playbackSpeed = PlaybackSpeed
  track = Track
com/spotify/protocol/types/Repeat = Com.Spotify.Protocol.Types.Repeat
  <init>(I)V = .ctor(int)
  repeat = _repeat
  ALL = All
  OFF = Off
  ONE = One
com/spotify/protocol/types/Roles = Com.Spotify.Protocol.Types.Roles
  <init>()V = .ctor()
  <init>(Lcom/spotify/protocol/types/Empty;Lcom/spotify/protocol/types/Empty;Lcom/spotify/protocol/types/Empty;Lcom/spotify/protocol/types/Empty;)V = .ctor(Com.Spotify.Protocol.Types.Empty, Com.Spotify.Protocol.Types.Empty, Com.Spotify.Protocol.Types.Empty, Com.Spotify.Protocol.Types.Empty)
  broker = Broker
  caller = Caller
  dealer = Dealer
  subscriber = Subscriber
com/spotify/protocol/types/Shuffle = Com.Spotify.Protocol.Types.Shuffle
  <init>(Z)V = .ctor(bool)
  shuffle = _shuffle
com/spotify/protocol/types/Track = Com.Spotify.Protocol.Types.Track
  <init>(Lcom/spotify/protocol/types/Artist;Ljava/util/List;Lcom/spotify/protocol/types/Album;JLjava/lang/String;Ljava/lang/String;Lcom/spotify/protocol/types/ImageUri;)V = .ctor(Com.Spotify.Protocol.Types.Artist, System.Collections.Generic.IList<Com.Spotify.Protocol.Types.Artist>, Com.Spotify.Protocol.Types.Album, long, string, string, Com.Spotify.Protocol.Types.ImageUri)
  album = Album
  artist = Artist
  artists = Artists
  duration = Duration
  imageUri = ImageUri
  name = Name
  uri = Uri
com/spotify/protocol/types/Types = Com.Spotify.Protocol.Types.ITypes
com/spotify/protocol/types/Uri = Com.Spotify.Protocol.Types.Uri
  <init>(Ljava/lang/String;)V = .ctor(string)
  uri = uri
com/spotify/protocol/types/Uris = Com.Spotify.Protocol.Types.Uris
  <init>()V = .ctor()
  <init>([Ljava/lang/String;)V = .ctor(string[])
  uris = _uris
com/spotify/protocol/types/UriWithOptionExtras = Com.Spotify.Protocol.Types.UriWithOptionExtras
  <init>()V = .ctor()
  <init>(Ljava/lang/String;[Ljava/lang/String;)V = .ctor(string, string[])
  options = Options
  uri = Uri
com/spotify/protocol/types/UserStatus = Com.Spotify.Protocol.Types.UserStatus
  <init>(ILjava/lang/String;Ljava/lang/String;)V = .ctor(int, string, string)
  code = Code
  longMessage = LongMessage
  shortMessage = ShortMessage
  STATUS_CODE_NOT_LOGGED_IN = StatusCodeNotLoggedIn
  STATUS_CODE_OK = StatusCodeOk
  isLoggedIn()Z = IsLoggedIn
com/spotify/protocol/types/WelcomeDetails = Com.Spotify.Protocol.Types.WelcomeDetails
  <init>(Lcom/spotify/protocol/types/Roles;)V = .ctor(Com.Spotify.Protocol.Types.Roles)
  roles = Roles
com/spotify/protocol/WampClient = Com.Spotify.Protocol.IWampClient
  ERROR_INVALID_ARGUMENT = ErrorInvalidArgument
  ERROR_INVALID_URI = ErrorInvalidUri
  WAMP_CLIENT_REQUEST_SYSTEM_SHUTDOWN = WampClientRequestSystemShutdown
  WAMP_ERROR = WampError
  WAMP_ERROR_SYSTEM_SHUTDOWN = WampErrorSystemShutdown
com/spotify/protocol/WampMessage = Com.Spotify.Protocol.WampMessage
  <init>(Lcom/spotify/protocol/mappers/JsonArray;)V = .ctor(Com.Spotify.Protocol.Mappers.IJsonArray)
  getAction()I = Action
  getIntAt(I)I = GetIntAt(int)
  getObjectAt(I)Lcom/spotify/protocol/mappers/JsonObject; = GetObjectAt(int)
  getStringAt(I)Ljava/lang/String; = GetStringAt(int)
